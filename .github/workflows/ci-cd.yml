name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-frontend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: react_frontend/cv-screener-frontend
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - run: npm install
      - run: npm run build

  build-backend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: java_spring_boot_backend/cv_screener_backend
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: temurin
      - run: mvn clean package -DskipTests

  build-python:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: python_ai_cv_microservice
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.11
      - run: pip install -r requirements.txt
      - run: pytest || echo "No tests found"

  deploy:
    runs-on: ubuntu-latest
    needs: [build-frontend, build-backend, build-python]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Copy files to server
        run: |
          rsync -avz --exclude '.git' --exclude 'node_modules' ./ user@${{ secrets.SERVER_IP }}:/home/user/ai-cv-screener

      - name: Deploy with Docker Compose
        run: |
          ssh user@${{ secrets.SERVER_IP }} "
            cd /home/user/ai-cv-screener &&
            docker compose pull &&
            docker compose up -d --build
          "
